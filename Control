import time 

  

try: 

    from machine import Pin 

    from micropython import const 

    import network 

    import uasyncio as asyncio 

     

except ImportError: 

    print("Ignoring MicroPython includes") 

  

from urest.http import RESTServer 

from urest.api import APIBase 

from urest.examples.simpleled import SimpleLED 

  

### 

### Main Loop 

### 

  

# Set the SSID of the wireless network 

SSID = "Pi Pico" 

# Set the password of the wireless network 

PASSWORD = "tv3W6G8!JmRyX1v" 

  

# Set-up the link status LED 

try: 

    link_status = Pin("WL_GPIO0", Pin.OUT) 

except NameError: 

    print("Cannot find the MicroPython PIN library") 

  

try: 

    # Set-up the Wireless Driver 

    wlan = network.WLAN(network.STA_IF) 

    wlan.active(True) 

    wlan.connect(SSID, PASSWORD) 

    

    # Number of connection attempts 

    # before a hard fail 

    max_wait = 10 

    

    while max_wait > 0: 

        if wlan.status() < 0 or wlan.status() >= 3: 

            print("Already connected!") 

            print("IP:  " + wlan.ifconfig()[0]) 

            break 

    

        max_wait -= 1 

        print("waiting for connection...") 

        time.sleep(1) 

    

    print(wlan.status()) 

    

    # Handle connection error 

    if wlan.status() != 3: 

        raise RuntimeError("network connection failed") 

    else: 

        print("Connected") 

        print("IP: " + wlan.ifconfig()[0]) 

    

    # Display the link light if connected 

    if wlan.status() == 3: 

        link_status.on() 

    else: 

        link_status.off() 

         

except NameError: 

    print("Cannot find the MicroPython network library") 

    

# Create the server ... 

app = RESTServer() 

    

# ... and register the nouns 

try: 

    app.register_noun("green_led0", SimpleLED(1)) 

except NameError: 

    print("Cannot find the MicroPython PIN library") 

    

if __name__ == "__main__": 

    loop = asyncio.get_event_loop() 

    loop.create_task(app.start()) 

    loop.run_forever() 
